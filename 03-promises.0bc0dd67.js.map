{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SAEvCF,EAAQG,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAEC,iBAEF,MAAMC,EAAWN,EAAQO,MAAMC,MACzBC,EAAUT,EAAQU,KAAKF,MACvBG,EAAYX,EAAQY,OAAOJ,MAEjC,IAAIK,EAAK,EAETC,YAAW,KACT,MAAMC,EAAaC,aAAY,KAC7B,GAAIH,EAAKF,EAEP,YADAM,cAAcF,GAIhB,IAAIG,EAAQC,OAAOb,GAAYa,QAAQN,EAAK,GAAKJ,GAWvD,IAAuBW,EAAUb,GAAVa,EATHP,EASaN,EATTW,EAUAG,KAAKC,SAAW,GAG7BC,QAAQC,QAAQ,C,SAAEJ,E,MAAUb,IAG5BgB,QAAQE,OAAO,C,SAAEL,E,MAAUb,KAf7BmB,MAAK,EAACN,SAACA,EAAQb,MAAEA,KAAWT,EAAA6B,OAAOC,QAAQ,uBAAqBR,QAAiBb,SAAYsB,OAC3F,EAAKT,WAASb,WAAaT,EAAA6B,OAAMG,QAAC,uBAASV,QAA+Bb,SAE/EM,GAAM,CAAC,GACNJ,EAAQ,GACVH,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n\n  const delayRef = formRef.delay.value;\n  const stepRef = formRef.step.value\n  const amountRef = formRef.amount.value;\n\n  let id = 1;\n\n  setTimeout(() => {\n    const intervalID = setInterval(() => {\n      if (id > amountRef) {\n        clearInterval(intervalID);\n        return;\n      }\n\n      let delay = Number(delayRef) + Number((id - 1) * stepRef);\n\n      createPromise(id, delay)\n        .then(({position, delay}) => Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`))\n        .catch(({position, delay}) => Notify.failure(`✅ Fulfilled promise ${position} in ${delay}ms`));\n      \n      id += 1;\n    }, stepRef)\n  }, delayRef);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n    return Promise.resolve({ position, delay });\n  } else {\n    // Reject\n    return Promise.reject({ position, delay });\n  }\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","addEventListener","e","preventDefault","delayRef","delay","value","stepRef","step","amountRef","amount","id","setTimeout","intervalID","setInterval","clearInterval","delay1","Number","position","Math","random","Promise","resolve","reject","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.0bc0dd67.js.map"}